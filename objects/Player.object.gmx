<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>P_Standing</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// player status
ivul=0;

hsp = 0;
vsp = 0;
grounded = 0;
grav=0;
canmove=true;
punching=0;
ducking=0;
D_punching=0;
backdashing=0;
JMP_punching=0;
sloping=0;
hurting=0;
jmptpc=0;
block_idle=0;
minor_dmg=0;
Gdown=0;
isonplat=0;
current_score=0;

duagrui=0;
Sl=0;

if(grav&lt;12)
{
grav += 1.3;
}

camface=0;
camface2=0;

//Elementos RPG, não foram utilizados

//global.exper = 0;
//global.money = 0;
//global.level = 1;
global.Max_HP=200; //Life máximo do personagem

//Life

HP=global.Max_HP;

instance_create(x,y,Life);
instance_create(x,y,obj_score);

//Campo de força
global.Efield=1;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Velocidade da sprite
image_speed=0.2
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Direção do personagem

mydir=1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Contadores

counter=0;
D_counter=0;
P_counter=0;
DP_counter=0;
BD_counter=0;
DMG_counter=0;
JPP_counter=0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Música

if(HP&gt;0)
{audio_play_sound(main_theme, 10, true);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movimento to player

key_left = keyboard_check_direct(vk_left);
key_right = keyboard_check_direct(vk_right);
key_down = keyboard_check(vk_down);
check_down = keyboard_check_direct(vk_down);
key_jmp = keyboard_check(ord("X"));
check_jmp = keyboard_check_direct(ord("X"));
key_punch = keyboard_check_pressed(ord("Z"));
key_backD = keyboard_check_pressed(ord("A"));

if(hsp==0)
{
sprite_index=P_Standing;
image_speed=0.2
}

//Se esquerda for pressionada
if (key_left &amp;&amp; !backdashing  &amp;&amp; !minor_dmg){
   if mydir != -1 {mydir = -1}
   camface=-32;
   if (hsp&gt;0)
    {
     hsp=0;
    }
   if(hsp&gt;-10)
   {
   if(hsp&gt;-2)
   {
    if(canmove &amp;&amp; !backdashing){hsp-=0.5;}
    if(grounded==1)
        { 
        image_speed=0.6
        sprite_index=P_Pre_Run;
        }
   }
    else
   {
    if (canmove &amp;&amp; !backdashing){hsp-=1;}
    if mydir != -1 {mydir = -1} 
        if(grounded==1)
        {
        image_speed=0.6
        sprite_index=P_Running;
        }
   }
   }
}

//Se direita for pressionada
if (key_right &amp;&amp; !backdashing &amp;&amp; !minor_dmg){

    if mydir != 1 {mydir = 1} 
    camface=32;
    if (hsp&lt;0)
    {
     hsp=0;
   }
   if(hsp&lt;10)
   {
   if(hsp&lt;2)
   {

    if(canmove &amp;&amp; !backdashing){hsp+=0.5;}
        if(grounded==1)
        {
        image_speed=0.6;
        sprite_index=P_Pre_Run;
        }
    }
    else
    {
    if(canmove &amp;&amp; !backdashing){hsp+=1;}
    if mydir != 1 {mydir = 1} 
        if(grounded==1)
        {
        image_speed=0.6;
        sprite_index=P_Running;
        }
   }
   }
}

if((!key_left &amp;&amp; !key_right) or (key_left &amp;&amp; key_right)) &amp;&amp; (!backdashing)
{
    hsp= 0;
    camface=0;
}

//definindo efeito da gravidade
vsp+=grav; 

//Colisão horizontal
var hcollide;
hcollide=instance_place(x+hsp,y,Wall_pr);
if(hcollide!=noone)
{

    if(hcollide)
    {
        yplus = 0;
        while (place_meeting(x+hsp,y-yplus,Wall_pr) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus += 4; 
        if place_meeting(x+hsp,y-yplus,Wall_pr)                              
        {
        while(!place_meeting(x+sign(hsp), y, Wall_pr)){ x += sign(hsp);}                
        hsp = 0; 
        }
        else                                                                           
        {
        y -= yplus;
        while (!place_meeting(x+hsp,y,Wall_pr)){y+=1;}
        }
        
    }
}

//Descendo ladeira
var Dscollide;
Dscollide=instance_place(x,y+1,Wall_pr);
if(Dscollide!=noone)
{
    if (Dscollide) //place_meeting(x, y+1, Wall_pr) 
    {
    yminus = abs(hsp); 
    while (place_meeting(x+hsp,y+yminus,Wall_pr)) &amp;&amp; yminus &gt;0 yminus--; 
    y += yminus
    }
}
      
//Definindo movimento horizontal
x+=hsp; 

//Colisão vertical
var vcollide;
vcollide=instance_place(x,y+vsp,Wall_pr);
if(vcollide!=noone)
{
    //if(place_meeting(x,y+1,Wall_pr)){grounded=1;} else {grounded=0;}
    if (vcollide) 
    {
        while(!place_meeting(x, y+sign(vsp), Wall_pr)) y+= sign(vsp);
        if (sign(vsp)==1){grounded=1;}
        vsp=0;
    
    }

}
else
{grounded=0;}



//Definindo movimento vertical
y+=vsp;

//Camera
view_xview[0]+= ((x-(view_wview[0]/2)-view_xview[0]) +camface )* 0.05;
view_yview[0]+= ((y-(view_wview[0]/2)-view_yview[0])+80 +camface2 )* 0.5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pulando


if(key_jmp &amp;&amp; !minor_dmg)
{   
    if(backdashing)
    {
    hsp=0;
    }
    if(grounded==1)
    {
    vsp-=25;
    }
}

if(!check_jmp &amp;&amp; vsp&lt;0)
{
   vsp=vsp/1.5;
}

if(vsp&lt;0 &amp;&amp; grounded!=1)
{
    camface2=vsp*(-2);
    if (counter == 10)
    {
    image_speed=0;
    sprite_index = P_JMP;
    image_index = 1;
    }
    else
    {
    image_speed=0;
    sprite_index = P_JMP;
    image_index = 0;
    counter++;
    }
}

if(vsp&gt;=0 &amp;&amp; grounded!=1)
{
    if (vsp==0)
    {
    camface2/=2;
    image_speed=0;
    image_index = 0;
    sprite_index = P_Falling;
    }
    else if (vsp&gt;0)
    {
    camface2=vsp*2;
    image_speed=0;
    image_index = 1;
    sprite_index = P_Falling;
    }
}

if(grounded)
{
    counter=0;
    if(hsp==0)
    {
    image_speed= 0.2;
    sprite_index=P_Standing;
    }
    else if (hsp!=0)
    {
    image_speed= 0.6;
    sprite_index=P_Running;
    }

}

if(vsp!=0)
{grounded=0;}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Se abaixando

if (key_down &amp;&amp; grounded &amp;&amp; !punching &amp;&amp; !backdashing &amp;&amp; !minor_dmg)
{
canmove=false;
hsp=0;
ducking=1;
sprite_index=P_BF_JMP_DUCK;
    if(D_counter&gt;0)
    {
    image_index=0;
    sprite_index=P_Ducking;
        if(D_counter&gt;1)
        {
        image_index=1;
        sprite_index=P_Ducking;
        }
    }
}

if(check_down &amp;&amp; ducking)
{
ducking=1;
D_counter++;
}

if((!key_down &amp;&amp; !check_down) || !grounded)
{ducking=0;}

if(!ducking)
{
D_counter=0;
canmove=true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Socando

if (key_punch &amp;&amp; grounded &amp;&amp; !ducking &amp;&amp; !backdashing &amp;&amp; !minor_dmg)
{
image_speed=0;
punching=1;
canmove=false; 
hsp=hsp/2;
image_index=0;
sprite_index=P_Punching;
}

if(punching)
{
if(P_counter&gt;1)
{
hsp=hsp/2;
image_index=1;
sprite_index=P_Punching;
    if(P_counter&gt;2)
    {
    hsp=0;
    image_index=3;
    sprite_index=P_Punching;
        if(P_counter&gt;5)
        {
        image_index=2;
        sprite_index=P_Punching;
            if(P_counter&gt;6)
            {
            punching=0;
            canmove=true;
            image_speed= 0.2;
            sprite_index=P_Standing;
            }
        }
        
    }
}

}

if(P_counter&gt;2 &amp;&amp; P_counter&lt;5)
{
var inst; 
if (mydir=1)
{inst = instance_create(x+40, y-45, Punch_Hitbox);}
else if(mydir=-1)
{inst = instance_create(x-40, y-45, Punch_Hitbox);}
}

if(punching)
{P_counter++;}
else
{P_counter=0;}

if(!grounded)
{punching=0;}

if(P_counter==1)
{audio_play_sound(punch_wnoise, 10, false);}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Backdashing

if (key_backD &amp;&amp; grounded &amp;&amp; !minor_dmg)
{
punching=0;
D_punching=0;
ducking=0;
image_speed=0;
backdashing=1;
hsp=0;
if (mydir == 1) 
{hsp-=14;} 
else if (mydir==-1)
{hsp+=14;}  
canmove=false;
image_index=0;
sprite_index=P_Backdashing;
}

if(BD_counter&gt;1 &amp;&amp; grounded)
{   
    image_index=1;
    sprite_index=P_Backdashing;
        if(BD_counter&gt;2)
        {
        image_index=2;
        sprite_index=P_Backdashing;
            if(BD_counter&gt;5)
            {
            image_index=3;
            sprite_index=P_Backdashing;
                if(BD_counter&gt;6)
                {
                image_index=2;
                sprite_index=P_Backdashing;
                    if(BD_counter&gt;8)
                    {
                    hsp=hsp/2;
                    backdashing=0;
                    canmove=true;
                    image_speed= 0.2;
                    sprite_index=P_Standing;
                    }
                }
            }
        
        }
}

if(backdashing)
{BD_counter++;}
else
{BD_counter=0;}

if(!grounded){backdashing=0;}

if(BD_counter==1)
{audio_play_sound(backdash_noise, 10, false);}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Socando abaixado

if (key_punch &amp;&amp; ducking)
{
image_speed=0;
D_punching=1;
canmove=false;
image_index=1;
sprite_index=P_Duck_Punching;
}

if(D_punching)
{
if(DP_counter&gt;1)
{
image_index=2;
sprite_index=P_Duck_Punching;
    if(DP_counter&gt;2)
    {
    hsp=0;
    image_index=4;
    sprite_index=P_Duck_Punching;
        if(DP_counter&gt;5)
        {
        image_index=3;
        sprite_index=P_Duck_Punching;
            if(DP_counter&gt;6)
            {
            D_punching=0;
            canmove=true;
            image_index=1;
            sprite_index=P_Ducking;
            }
        }
        
    }
}

}

if(DP_counter&gt;2 &amp;&amp; DP_counter&lt;5)
{
var inst;
if (mydir=1)
{inst = instance_create(x+54, y+15, Punch_Hitbox);}
else if(mydir=-1)
{inst = instance_create(x-54, y+15, Punch_Hitbox);}
}

if(D_punching)
{DP_counter++;}
else
{DP_counter=0;}

if(DP_counter==1)
{audio_play_sound(punch_wnoise, 10, false);}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Soco enquanto no ar

if (key_punch &amp;&amp; !grounded &amp;&amp; !minor_dmg)
{
image_speed=0;
JMP_punching=1;
image_index=0;
sprite_index=P_JMP_Punch;
}

if(JMP_punching)
{
if(JPP_counter&gt;1)
{
image_index=1;
sprite_index=P_JMP_Punch;
    if(JPP_counter&gt;2)
    {
    image_index=3;
    sprite_index=P_JMP_Punch;
        if(JPP_counter&gt;5)
        {
        image_index=2;
        sprite_index=P_JMP_Punch;
            if(JPP_counter&gt;6)
            {
            JMP_punching=0;
            }
        }
        
    }
}

}

if(JPP_counter&gt;2 &amp;&amp; JPP_counter&lt;5)
{
var inst; 
if (mydir=1)
{inst = instance_create(x+50, y-50, Punch_Hitbox);}
else if(mydir=-1)
{inst = instance_create(x-50, y-50, Punch_Hitbox);}
}

if(JMP_punching)
{JPP_counter++;}
else
{JPP_counter=0;}

if(grounded)
{JPP_counter=0;JMP_punching=0;}

if(JPP_counter==1)
{audio_play_sound(punch_wnoise, 10, false);}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Colisão com o inimigo


if(minor_dmg)
{
    ivul=1;
    punching=0;
    D_punching=0;
    backdashing=0;
    punching=0;
    ducking=0;
    canmove=false;
    
    vsp=0;
    
    sprite_index=P_Minor_DMG;
    image_index=0;
    image_speed=0;
    hsp=0;
    
    if(DMG_counter&gt;1)
        {
           image_index=1;
           sprite_index=P_Minor_DMG;
            if(DMG_counter&gt;2)
            {
            image_index=2;
            sprite_index=P_Minor_DMG;
                if(DMG_counter&gt;3)
                {
                image_index=1;
                sprite_index=P_Minor_DMG;
                    if(DMG_counter&gt;8)
                    {
                    minor_dmg=0;
                    ivul=0;
                    canmove=true;
                    image_speed= 0.2;
                    sprite_index=P_Standing;
                    }
                }
            }
        }
}


if(minor_dmg)
{DMG_counter++;}
else
{DMG_counter=0;}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Morte

if(HP&lt;=0)
{
HP=0;
audio_stop_sound(main_theme);
audio_play_sound(Death_sound, 10, false);
with (obj_pause) instance_destroy();
with (obj_score) instance_destroy();
with (Life) instance_destroy();
instance_destroy();
room_goto(FimJogo);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setador de direção
draw_sprite_ext(sprite_index,image_index,x,y,mydir,image_yscale,image_angle,c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Efeito da personagem se ferindo


if(DMG_counter&gt;1 &amp;&amp; DMG_counter&lt;3)
{
d3d_set_fog(true, c_red, 0, 0);
draw_sprite_ext(sprite_index,image_index,x,y,mydir,image_yscale,image_angle,c_red,image_alpha);
d3d_set_fog(false, c_white, 0, 0);
}

if(DMG_counter&gt;3 &amp;&amp; DMG_counter&lt;5)
{
d3d_set_fog(false, c_white, 0, 0);
}

if(DMG_counter&gt;5 &amp;&amp; DMG_counter&lt;7)
{
d3d_set_fog(true, c_red, 0, 0);
draw_sprite_ext(sprite_index,image_index,x,y,mydir,image_yscale,image_angle,c_red,image_alpha);
d3d_set_fog(false, c_white, 0, 0);

}
if(DMG_counter&gt;7)
{
d3d_set_fog(false, c_white, 0, 0);
}

if(DMG_counter=0)
{d3d_set_fog(false, c_white, 0, 0);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
